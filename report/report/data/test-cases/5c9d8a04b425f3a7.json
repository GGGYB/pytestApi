{
  "uid" : "5c9d8a04b425f3a7",
  "name" : "新增用户",
  "fullName" : "test_userManage.TestUserManage#test_add_user",
  "historyId" : "babdba5e5940d3ba90e375f5ee53eb4e",
  "time" : {
    "start" : 1604654540347,
    "stop" : 1604654540366,
    "duration" : 19
  },
  "status" : "failed",
  "statusMessage" : "AssertionError",
  "statusTrace" : "self = <tc.test_userManage.TestUserManage object at 0x03FCA1C0>\ninData = '{\"password\":\"\",\"password_confirm\": \"88888888\",\"username\":\"001\"}'\nexp = '{\\'code\\':500,\\'msg\\':\"Key:\\'userAddRequest.password\\'Error:Field validation for \\'password\\' failed on the\\'required\\' tag\"}'\n\n    @allure.title(\"新增用户\")\n    @pytest.mark.parametrize(\"inData,exp\",get_excel_data(\"user\",2,6,7,8))\n    def test_add_user(self,inData,exp):\n        res = UserManage().add_user(self.token,inData)\n        print(inData)\n>       assert self.test.assert_code(res[\"code\"],200)\n\ntest_userManage.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <common.Assert.Assertions object at 0x03FBF910>, code = 500, expected_code = 200\n\n    def assert_code(self, code, expected_code):\n        \"\"\"\n        验证response状态码\n        :param code:\n        :param expected_code:\n        :return:\n        \"\"\"\n        try:\n>           assert code == expected_code\nE           AssertionError\n\n..\\common\\Assert.py:28: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1604654539973,
      "stop" : 1604654540135,
      "duration" : 162
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError",
    "statusTrace" : "self = <tc.test_userManage.TestUserManage object at 0x03FCA1C0>\ninData = '{\"password\":\"\",\"password_confirm\": \"88888888\",\"username\":\"001\"}'\nexp = '{\\'code\\':500,\\'msg\\':\"Key:\\'userAddRequest.password\\'Error:Field validation for \\'password\\' failed on the\\'required\\' tag\"}'\n\n    @allure.title(\"新增用户\")\n    @pytest.mark.parametrize(\"inData,exp\",get_excel_data(\"user\",2,6,7,8))\n    def test_add_user(self,inData,exp):\n        res = UserManage().add_user(self.token,inData)\n        print(inData)\n>       assert self.test.assert_code(res[\"code\"],200)\n\ntest_userManage.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <common.Assert.Assertions object at 0x03FBF910>, code = 500, expected_code = 200\n\n    def assert_code(self, code, expected_code):\n        \"\"\"\n        验证response状态码\n        :param code:\n        :param expected_code:\n        :return:\n        \"\"\"\n        try:\n>           assert code == expected_code\nE           AssertionError\n\n..\\common\\Assert.py:28: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "7c21b4c7d518d412",
      "name" : "log",
      "source" : "7c21b4c7d518d412.txt",
      "type" : "text/plain",
      "size" : 364
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1604654540376,
      "stop" : 1604654540376,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "suite",
    "value" : "test_userManage"
  }, {
    "name" : "subSuite",
    "value" : "TestUserManage"
  }, {
    "name" : "host",
    "value" : "dadaxPC008"
  }, {
    "name" : "thread",
    "value" : "7284-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_userManage"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "exp",
    "value" : "'{'code':500,'msg':\"Key:'userAddRequest.password'Error:Field validation for 'password' failed on the'required' tag\"}'"
  }, {
    "name" : "inData",
    "value" : "'{\"password\":\"\",\"password_confirm\": \"88888888\",\"username\":\"001\"}'"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "5c9d8a04b425f3a7.json",
  "parameterValues" : [ "'{'code':500,'msg':\"Key:'userAddRequest.password'Error:Field validation for 'password' failed on the'required' tag\"}'", "'{\"password\":\"\",\"password_confirm\": \"88888888\",\"username\":\"001\"}'" ]
}